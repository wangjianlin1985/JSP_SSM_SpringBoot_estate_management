<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.FacilityMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加基础设施记录 -->
	<insert id="addFacility" parameterType="facility">
		insert into t_facility(facilityName,facilityPhoto,purpose,bornDate,fuzeren,telephone,facilityMemo) values 
		(#{facilityName},#{facilityPhoto},#{purpose},#{bornDate},#{fuzeren},#{telephone},#{facilityMemo})
	</insert>

	<!-- 按照查询条件分页查询基础设施记录 -->
	<select id="queryFacility" resultMap="facilityMap" >
		select t_facility.* from t_facility ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="facilityMap" type="facility">
        <id property="facilityId" column="facilityId" />
    </resultMap>

    <!-- 按照查询条件查询所有基础设施记录 -->
	<select id="queryFacilityList" resultMap="facilityMap" >
		select t_facility.* from t_facility ${where}
	</select>

    <!-- 按照查询条件的基础设施记录数 -->
	<select id="queryFacilityCount" resultType="int">
		select count(*) from t_facility ${where}
	</select>

	<!-- 根据主键查询某个基础设施记录 -->
	<select id="getFacility" parameterType="int" resultMap="facilityMap">
		select * from t_facility where t_facility.facilityId = #{facilityId}
	</select>

	<!-- 更新基础设施记录 -->
	<update id="updateFacility" parameterType="facility">
		update t_facility set facilityName=#{facilityName},facilityPhoto=#{facilityPhoto},purpose=#{purpose},bornDate=#{bornDate},fuzeren=#{fuzeren},telephone=#{telephone},facilityMemo=#{facilityMemo} where facilityId = #{facilityId}
	</update>

	<!-- 删除基础设施记录 -->
	<delete id="deleteFacility" parameterType="int">
		delete from t_facility where facilityId=#{facilityId}
	</delete>

</mapper>
